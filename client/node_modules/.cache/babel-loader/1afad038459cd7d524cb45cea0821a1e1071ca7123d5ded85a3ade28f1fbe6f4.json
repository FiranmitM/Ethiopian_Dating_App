{"ast":null,"code":"var _jsxFileName = \"/home/by/datingApp/EDA/client/src/pages/Profile/Profile.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Avatar, Button, Grid, Paper, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { getProfileData } from '../../reducers/profileReducer';\nimport Loader from '../../components/Loader';\nimport profileService from \"../../services/profileService\";\nimport { changeSeverity } from \"../../reducers/severityReducer\";\nimport { changeNotification } from \"../../reducers/notificationReducer\";\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\nimport Notification from '../../components/notification/Notification';\nimport Onboarding from './Onboarding';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileInput = _ref => {\n  let {\n    text,\n    input\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    sx: {\n      display: 'inline'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        width: 170,\n        display: 'inline-block',\n        textAlign: 'left'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        width: 'fit-content',\n        display: 'inline',\n        textAlign: 'left'\n      },\n      children: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = ProfileInput;\nconst Profile = () => {\n  _s();\n  const [isLoading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const profileData = useSelector(state => state.profile);\n  useEffect(() => {\n    const getData = async () => {\n      await dispatch(getProfileData());\n      setLoading(false);\n    };\n    getData();\n  }, [dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      text: \"Getting profile data ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  if (!profileData.id) {\n    return /*#__PURE__*/_jsxDEV(Onboarding, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  const profile_pic = profileData.profile_pic['picture_data'];\n  const other_pictures = profileData.other_pictures;\n  const userid = profileData.id;\n  const ProfileData = {\n    'First name:': profileData.firstname,\n    'Last name:': profileData.lastname,\n    'Email address:': profileData.email,\n    'Gender:': profileData.gender,\n    'Age:': profileData.age,\n    'Sexual preference:': profileData.sexual_pref,\n    'Location:': profileData.user_location,\n    'GPS:': Object.values(profileData.ip_location).map((value, i) => (i ? ', ' : '') + value),\n    'Tags:': profileData.tags.map((tag, i) => (i ? ', ' : '') + tag),\n    'Users you have liked:': profileData.liked.map((liked, i) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: `/profile/${liked.target_id}`,\n        children: (i ? ', ' : '') + liked.username\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    }),\n    'Users who liked you:': profileData.likers.map((liker, i) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: `/profile/${liker.liker_id}`,\n        children: (i ? ', ' : '') + liker.username\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }),\n    'Users who watched your profile:': profileData.watchers.map((watcher, i) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: `/profile/${watcher.watcher_id}`,\n        children: (i ? ', ' : '') + watcher.username\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    })\n  };\n  // _______________________\n\n  // //replace with a hook as this code might be repeated in other parts?\n\n  const deleteImage = async id => {\n    if (window.confirm(\"Are you sure you want to delete this picture?\")) {\n      const result = await profileService.deletePicture(id);\n      if (result === 'Picture deleted') {\n        dispatch(getProfileData());\n        dispatch(changeSeverity('success'));\n        dispatch(changeNotification(\"Picture deleted successfully!\"));\n      } else {\n        dispatch(changeSeverity('error'));\n        dispatch(changeNotification(result));\n      }\n    }\n  };\n  const uploadImage = async event => {\n    const image = event.target.files[0];\n    if (image.size > 5242880) {\n      dispatch(changeSeverity('error'));\n      dispatch(changeNotification(\"The maximum size for uploaded images is 5 megabytes.\"));\n    } else {\n      let formData = new FormData();\n      formData.append('file', image);\n      const result = await profileService.uploadPicture(formData);\n      if (result === true) {\n        dispatch(getProfileData());\n        dispatch(changeSeverity('success'));\n        dispatch(changeNotification(\"Image uploaded successfully!\"));\n      } else {\n        dispatch(changeSeverity('error'));\n        dispatch(changeNotification(result));\n      }\n    }\n    event.target.value = '';\n  };\n  const setProfilePicture = async event => {\n    const image = event.target.files[0];\n    if (image.size > 5242880) {\n      dispatch(changeSeverity('error'));\n      dispatch(changeNotification(\"The maximum size for uploaded images is 5 megabytes.\"));\n    } else {\n      let formData = new FormData();\n      formData.append('file', image);\n      const result = await profileService.setProfilePic(formData);\n      if (result === true) {\n        dispatch(getProfileData());\n        dispatch(changeSeverity('success'));\n        dispatch(changeNotification(\"Profile picture set!\"));\n      } else {\n        dispatch(changeSeverity('error'));\n        dispatch(changeNotification(result));\n      }\n    }\n    event.target.value = '';\n  };\n  const deleteUser = id => {\n    if (window.confirm(\"Are you sure you want to completely delete your account?\")) {\n      if (window.confirm(\"Are you sure? There is no way to retrieve your data afterwards.\")) {\n        profileService.deleteUser().then(result => {\n          if (result === true) {\n            dispatch(changeSeverity('success'));\n            dispatch(changeNotification(\"User has been successfully deleted. Next!\"));\n            navigate('/logout');\n          } else {\n            dispatch(changeSeverity('error'));\n            dispatch(changeNotification(result));\n          }\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      pt: 5,\n      pb: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      sx: {\n        padding: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        sx: {\n          display: 'flex',\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '200px',\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: profile_pic,\n            alt: \"profile\",\n            sx: {\n              width: 112,\n              height: 112\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            children: profileData.Username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"Fame rating: \", profileData.total_pts, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        direction: \"row\",\n        sx: {\n          mb: 2\n        },\n        children: Object.keys(ProfileData).map((key, index) => {\n          return /*#__PURE__*/_jsxDEV(ProfileInput, {\n            text: key,\n            input: ProfileData[key]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Biography: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            wordWrap: \"break-word\"\n          },\n          children: profileData.biography\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"flex-start\",\n        divider: /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 73\n        }, this),\n        spacing: 2,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate('/settings'),\n          children: \"Edit profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate('/changepassword'),\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        mb: 2,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"   Change profile picture : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"set_profilepic\",\n            accept: \"image/jpeg, image/png, image/jpg\",\n            onChange: setProfilePicture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"other_pictures\",\n          children: other_pictures.map((picture, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              onError: _ref2 => {\n                let {\n                  currentTarget\n                } = _ref2;\n                currentTarget.onerror = null;\n                currentTarget.src = 'http://localhost:3000/images/default_profilepic.jpeg';\n              },\n              alt: \"random_picture\",\n              height: \"100px\",\n              src: picture.picture_data\n            }, picture.picture_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                deleteImage(picture.picture_id);\n              },\n              children: \"Delete picture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"   Add new picture : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"image_upload\",\n            accept: \"image/jpeg, image/png, image/jpg\",\n            onChange: uploadImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => deleteUser(userid),\n          children: \"Delete user \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"e1atYrtgNNd/ui9IXiwgcuc7hJQ=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c2 = Profile;\nexport default Profile;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProfileInput\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"names":["React","Avatar","Button","Grid","Paper","Typography","Box","Container","useEffect","useState","useSelector","useDispatch","useNavigate","Link","getProfileData","Loader","profileService","changeSeverity","changeNotification","Stack","Divider","Notification","Onboarding","ProfileInput","text","input","display","width","textAlign","Profile","isLoading","setLoading","dispatch","navigate","profileData","state","profile","getData","id","profile_pic","other_pictures","userid","ProfileData","firstname","lastname","email","gender","age","sexual_pref","user_location","Object","values","ip_location","map","value","i","tags","tag","liked","target_id","username","likers","liker","liker_id","watchers","watcher","watcher_id","deleteImage","window","confirm","result","deletePicture","uploadImage","event","image","target","files","size","formData","FormData","append","uploadPicture","setProfilePicture","setProfilePic","deleteUser","then","pt","pb","padding","alignContent","alignItems","justifyContent","mb","height","Username","total_pts","keys","key","index","wordWrap","biography","picture","currentTarget","onerror","src","picture_data","picture_id"],"sources":["/home/by/datingApp/EDA/client/src/pages/Profile/Profile.js"],"sourcesContent":["import * as React from 'react'\nimport { Avatar, Button, Grid, Paper, Typography } from \"@mui/material\"\nimport { Box, Container } from \"@mui/system\"\nimport { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { getProfileData } from '../../reducers/profileReducer'\nimport Loader from '../../components/Loader'\nimport profileService from \"../../services/profileService\"\nimport { changeSeverity } from \"../../reducers/severityReducer\"\nimport { changeNotification } from \"../../reducers/notificationReducer\"\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\nimport Notification from '../../components/notification/Notification'\nimport Onboarding from './Onboarding'\n\nconst ProfileInput = ({ text, input }) => {\n    return (\n        <Grid item xs={12} sm={6} sx={{ display: 'inline' }}>\n            <Typography sx={{ width: 170, display: 'inline-block', textAlign: 'left' }}>\n                {text}\n            </Typography>\n            <Typography sx={{ width: 'fit-content', display: 'inline', textAlign: 'left' }}>\n                {input}\n            </Typography>\n        </Grid>\n    )\n}\n\nconst Profile = () => {\n    const [isLoading, setLoading] = useState(true)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const profileData = useSelector(state => state.profile)\n\n    useEffect(() => {\n        const getData = async () => {\n            await dispatch(getProfileData())\n            setLoading(false)\n        }\n        getData()\n    }, [dispatch])\n\n    if (isLoading) {\n        return <Loader text=\"Getting profile data ...\" />\n    }\n\n    if (!profileData.id) {\n        return <Onboarding />\n    }\n\n    const profile_pic = profileData.profile_pic['picture_data']\n    const other_pictures = profileData.other_pictures\n\n    const userid = profileData.id;\n    const ProfileData = {\n        'First name:': profileData.firstname,\n        'Last name:': profileData.lastname,\n        'Email address:': profileData.email,\n        'Gender:': profileData.gender,\n        'Age:': profileData.age,\n        'Sexual preference:': profileData.sexual_pref,\n        'Location:': profileData.user_location,\n        'GPS:': Object.values(profileData.ip_location).map((value, i) => ((i ? ', ' : '') + value)),\n        'Tags:': profileData.tags.map((tag, i) => ((i ? ', ' : '') + tag)),\n        'Users you have liked:': profileData.liked.map((liked, i) => {\n            return (\n                <Typography key={i}\n                    component={Link} to={`/profile/${liked.target_id}`}>\n                    {(i ? ', ' : '') + liked.username}\n                </Typography>)\n        }),\n        'Users who liked you:': profileData.likers.map((liker, i) => {\n            return (\n                <Typography key={i}\n                    component={Link} to={`/profile/${liker.liker_id}`}>\n                    {(i ? ', ' : '') + liker.username}\n                </Typography>)\n        }),\n        'Users who watched your profile:': profileData.watchers.map((watcher, i) => {\n            return (\n                <Typography key={i}\n                    component={Link} to={`/profile/${watcher.watcher_id}`}>\n                    {(i ? ', ' : '') + watcher.username}\n                </Typography>)\n        })\n    }\n    // _______________________\n\n    // //replace with a hook as this code might be repeated in other parts?\n\n    const deleteImage = async (id) => {\n        if (window.confirm(\"Are you sure you want to delete this picture?\")) {\n            const result = await profileService.deletePicture(id)\n            if (result === 'Picture deleted') {\n                dispatch(getProfileData())\n                dispatch(changeSeverity('success'))\n                dispatch(changeNotification(\"Picture deleted successfully!\"))\n            } else {\n                dispatch(changeSeverity('error'))\n                dispatch(changeNotification(result))\n            }\n        }\n    }\n\n\n    const uploadImage = async (event) => {\n        const image = event.target.files[0]\n        if (image.size > 5242880) {\n            dispatch(changeSeverity('error'))\n            dispatch(changeNotification(\"The maximum size for uploaded images is 5 megabytes.\"))\n        } else {\n            let formData = new FormData()\n            formData.append('file', image)\n            const result = await profileService.uploadPicture(formData)\n            if (result === true) {\n                dispatch(getProfileData())\n                dispatch(changeSeverity('success'))\n                dispatch(changeNotification(\"Image uploaded successfully!\"))\n            } else {\n                dispatch(changeSeverity('error'))\n                dispatch(changeNotification(result))\n            }\n        }\n        event.target.value = ''\n    }\n\n    const setProfilePicture = async (event) => {\n        const image = event.target.files[0]\n        if (image.size > 5242880) {\n            dispatch(changeSeverity('error'))\n            dispatch(changeNotification(\"The maximum size for uploaded images is 5 megabytes.\"))\n\n        } else {\n            let formData = new FormData()\n            formData.append('file', image)\n            const result = await profileService.setProfilePic(formData)\n            if (result === true) {\n                dispatch(getProfileData())\n                dispatch(changeSeverity('success'))\n                dispatch(changeNotification(\"Profile picture set!\"))\n            } else {\n                dispatch(changeSeverity('error'))\n                dispatch(changeNotification(result))\n            }\n        }\n        event.target.value = ''\n    }\n\n    const deleteUser = (id) => {\n        if (window.confirm(\"Are you sure you want to completely delete your account?\")) {\n            if (window.confirm(\"Are you sure? There is no way to retrieve your data afterwards.\")) {\n                profileService.deleteUser().then(result => {\n                    if (result === true) {\n                        dispatch(changeSeverity('success'))\n                        dispatch(changeNotification(\"User has been successfully deleted. Next!\"))\n                        navigate('/logout')\n                    } else {\n                        dispatch(changeSeverity('error'))\n                        dispatch(changeNotification(result))\n                    }\n                })\n            }\n        }\n    }\n\n    return (\n        <Container maxWidth='md' sx={{ pt: 5, pb: 5 }} >\n            <Paper elevation={10} sx={{ padding: 3 }}>\n                <Grid\n                    sx={{\n                        display: 'flex',\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        mb: 2,\n\n                    }}\n                >\n                    <Box sx={{ width: '200px', display: 'inline-block' }}>\n                        <Avatar\n                            src={profile_pic}\n                            alt='profile'\n                            sx={{ width: 112, height: 112 }}\n                        />\n                    </Box>\n                    <Box>\n                        <Typography variant='h2'>\n                            {profileData.Username}\n                        </Typography>\n                        <Typography variant='h5'>Fame rating: {profileData.total_pts} </Typography>\n                    </Box>\n                </Grid>\n                <Grid container spacing={1} direction=\"row\" sx={{ mb: 2 }}>\n                    {Object.keys(ProfileData).map((key, index) => {\n                        return <ProfileInput key={index} text={key} input={ProfileData[key]} />\n                    })}\n                </Grid>\n                <Grid sx={{ mb: 2 }} >\n                    <Typography>\n                        {\"Biography: \"}\n                    </Typography>\n                    <Typography style={{ wordWrap: \"break-word\" }}>\n                        {profileData.biography}\n                    </Typography>\n                </Grid>\n                <Stack direction=\"row\" alignItems=\"flex-start\" divider={<Divider orientation=\"vertical\" flexItem />} spacing={2} mb={2}>\n                    <Button variant='outlined' onClick={() => navigate('/settings')}>Edit profile</Button>\n                    <Button variant='outlined' onClick={() => navigate('/changepassword')}>Change password</Button>\n                </Stack>\n                <Stack justifyContent=\"center\" alignItems=\"flex-start\" mb={2} spacing={2}>\n                    <Button>\n                        <label>   Change profile picture : </label>\n                        <input type=\"file\" name=\"file\" id=\"set_profilepic\" accept=\"image/jpeg, image/png, image/jpg\" onChange={setProfilePicture}></input>\n                    </Button>\n                    <div id=\"other_pictures\">\n                        {other_pictures.map((picture, i) =>\n                            <div key={i}>\n                                <img onError={({ currentTarget }) => {\n                                    currentTarget.onerror = null\n                                    currentTarget.src = 'http://localhost:3000/images/default_profilepic.jpeg'\n                                }}\n                                    key={picture.picture_id} alt=\"random_picture\" height=\"100px\" src={picture.picture_data}></img>\n                                <Button onClick={() => { deleteImage(picture.picture_id) }} >Delete picture</Button>\n                            </div>\n                        )}\n                    </div>\n                    <Button>\n                        <label>   Add new picture : </label>\n                        <input type=\"file\" name=\"file\" id=\"image_upload\" accept=\"image/jpeg, image/png, image/jpg\" onChange={uploadImage}></input>\n                    </Button>\n                    <Button variant='outlined' onClick={() => deleteUser(userid)}>Delete user </Button>\n                </Stack>\n            </Paper>\n            <Notification />\n        </Container>\n\n    )\n}\n\nexport default Profile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}