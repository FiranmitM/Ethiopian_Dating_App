{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/profile';\nconst setUpProfile = ProfileSettings => {\n  const request = axios.post(`${baseUrl}/setup`, ProfileSettings);\n  return request.then(response => response.data);\n};\n\n// ProfileSettings.\n\nconst editUserSettings = ProfileSettings => {\n  const request = axios.post(`${baseUrl}/editsettings`, ProfileSettings);\n  return request.then(response => response.data);\n};\nconst changePassword = passWords => {\n  const request = axios.post(`${baseUrl}/changepassword`, passWords);\n  return request.then(response => response.data);\n};\nconst getProfileData = () => {\n  const request = axios.get(`${baseUrl}`);\n  return request.then(response => response.data);\n};\nconst getNotifications = () => {\n  const request = axios.get(`${baseUrl}/notifications`);\n  return request.then(response => response.data);\n};\nconst clearNotifications = () => {\n  const request = axios.delete(`${baseUrl}/notifications`);\n  return request.then(response => response.data);\n};\nconst deleteNotification = id => {\n  const request = axios.delete(`${baseUrl}/notification/${id}`);\n  return request.then(response => response.data);\n};\nconst readNotification = id => {\n  const request = axios.patch(`${baseUrl}/readnotification/${id}`);\n  return request.then(response => response.data);\n};\nconst readAllNotifications = () => {\n  const request = axios.patch(`${baseUrl}/readnotifications`);\n  return request.then(response => response.data);\n};\nconst setProfilePic = Picture => {\n  const request = axios.post(`${baseUrl}/setprofilepic`, Picture);\n  return request.then(response => response.data);\n};\nconst uploadPicture = Picture => {\n  const request = axios.post(`${baseUrl}/imageupload`, Picture);\n  return request.then(response => response.data);\n};\nconst deletePicture = PictureId => {\n  const request = axios.delete(`${baseUrl}/deletepicture/${PictureId}`);\n  return request.then(response => response.data);\n};\nconst deleteUser = () => {\n  const request = axios.delete(`${baseUrl}/deleteuser`);\n  return request.then(response => response.data);\n};\nconst profileService = {\n  setUpProfile,\n  getProfileData,\n  getNotifications,\n  clearNotifications,\n  deleteNotification,\n  readNotification,\n  readAllNotifications,\n  setProfilePic,\n  uploadPicture,\n  deletePicture,\n  editUserSettings,\n  changePassword,\n  deleteUser\n};\nexport default profileService;","map":{"version":3,"names":["axios","baseUrl","setUpProfile","ProfileSettings","request","post","then","response","data","editUserSettings","changePassword","passWords","getProfileData","get","getNotifications","clearNotifications","delete","deleteNotification","id","readNotification","patch","readAllNotifications","setProfilePic","Picture","uploadPicture","deletePicture","PictureId","deleteUser","profileService"],"sources":["/home/franmit/Downloads/Ethiopia_dating_app/client/src/services/profileService.js"],"sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/profile'\n\nconst setUpProfile = ProfileSettings => {\n\tconst request = axios.post(`${baseUrl}/setup`, ProfileSettings)\n\treturn request.then(response => response.data)\n}\n\n// ProfileSettings.\n\nconst editUserSettings = ProfileSettings => {\n\tconst request = axios.post(`${baseUrl}/editsettings`, ProfileSettings)\n\treturn request.then(response => response.data)\n}\n\nconst changePassword = passWords => {\n\tconst request = axios.post(`${baseUrl}/changepassword`, passWords)\n\treturn request.then(response => response.data)\n}\n\nconst getProfileData = () => {\n\tconst request = axios.get(`${baseUrl}`)\n\treturn request.then(response => response.data)\n}\n\nconst getNotifications = () => {\n\tconst request = axios.get(`${baseUrl}/notifications`)\n\treturn request.then(response => response.data)\n}\n\nconst clearNotifications = () => {\n\tconst request = axios.delete(`${baseUrl}/notifications`)\n\treturn request.then(response => response.data)\n}\n\nconst deleteNotification = id => {\n\tconst request = axios.delete(`${baseUrl}/notification/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst readNotification = id => {\n\tconst request = axios.patch(`${baseUrl}/readnotification/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst readAllNotifications = () => {\n\tconst request = axios.patch(`${baseUrl}/readnotifications`)\n\treturn request.then(response => response.data)\n}\n\nconst setProfilePic = Picture => {\n\tconst request = axios.post(`${baseUrl}/setprofilepic`, Picture)\n\treturn request.then(response => response.data)\n}\n\nconst uploadPicture = Picture => {\n\tconst request = axios.post(`${baseUrl}/imageupload`, Picture)\n\treturn request.then(response => response.data)\n}\n\nconst deletePicture = PictureId => {\n\tconst request = axios.delete(`${baseUrl}/deletepicture/${PictureId}`)\n\treturn request.then(response => response.data)\n}\n\nconst deleteUser = () => {\n\tconst request = axios.delete(`${baseUrl}/deleteuser`)\n\treturn request.then(response => response.data)\n}\n\nconst profileService = {\n\tsetUpProfile, getProfileData, getNotifications, clearNotifications,\n\tdeleteNotification, readNotification, readAllNotifications, setProfilePic,\n\tuploadPicture, deletePicture, editUserSettings, changePassword, deleteUser\n}\n\nexport default profileService"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}