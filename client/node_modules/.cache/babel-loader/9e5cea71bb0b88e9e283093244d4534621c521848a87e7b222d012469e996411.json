{"ast":null,"code":"var _jsxFileName = \"/home/by/datingApp/EDA/client/src/pages/Login/Login.js\",\n  _s = $RefreshSig$();\nimport { Button, Paper, TextField, Typography } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Notification from \"../../components/notification/Notification\";\nimport { changeNotification } from \"../../reducers/notificationReducer\";\nimport { changeSeverity } from \"../../reducers/severityReducer\";\nimport signUpService from \"../../services/signUpService\";\nimport { setUser } from \"../../reducers/userReducer\";\nimport { getProfileData } from '../../reducers/profileReducer';\nimport { getUserLists } from \"../../reducers/userListsReducer\";\nimport { getUserNotifications } from \"../../reducers/userNotificationsReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const submitUser = async event => {\n    event.preventDefault();\n    const signedUpUser = {\n      username: event.target.username.value,\n      password: event.target.password.value\n    };\n    signUpService.logInUser(signedUpUser).then(result => {\n      if (result.userid) {\n        const sessionUser = {\n          name: result.username,\n          id: result.userid\n        };\n        dispatch(setUser(sessionUser));\n        dispatch(getUserLists());\n        dispatch(getUserNotifications());\n        dispatch(getProfileData());\n        dispatch(changeNotification(\"\"));\n        socket.emit(\"newUser\", {\n          name: result.username,\n          id: result.userid,\n          socketID: socket.id\n        });\n        socket.emit(\"join_notification\", {\n          id: result.userid\n        });\n      } else {\n        dispatch(changeSeverity('error'));\n        dispatch(changeNotification(result));\n      }\n    });\n  };\n  const navigateToReset = () => {\n    navigate('/login/resetpassword');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      pt: 5,\n      pb: 5,\n      backgroundImage: `url(\"https://assets.materialup.com/uploads/cd7deaa7-e263-4c1b-98c9-132d248fc0d4/preview.png\")`,\n      backgroundSize: 'cover',\n      width: 'auto',\n      height: 'auto',\n      minHeight: '80vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      align: \"center\",\n      sx: {\n        padding: 3,\n        width: '50%',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        align: \"center\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitUser,\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          name: \"username\",\n          label: \"Username\",\n          placeholder: \"Username\",\n          autoComplete: \"nickname\",\n          required: true,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          margin: \"normal\",\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          placeholder: \"Password\",\n          autoComplete: \"new-password\",\n          required: true,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: navigateToReset,\n        sx: {\n          mt: 1\n        },\n        children: \" Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Paper","TextField","Typography","Container","useDispatch","useNavigate","Notification","changeNotification","changeSeverity","signUpService","setUser","getProfileData","getUserLists","getUserNotifications","Login","socket","dispatch","navigate","submitUser","event","preventDefault","signedUpUser","username","target","value","password","logInUser","then","result","userid","sessionUser","name","id","emit","socketID","navigateToReset","pt","pb","backgroundImage","backgroundSize","width","height","minHeight","padding","margin","mt"],"sources":["/home/by/datingApp/EDA/client/src/pages/Login/Login.js"],"sourcesContent":["import { Button, Paper, TextField, Typography } from \"@mui/material\"\nimport { Container } from \"@mui/system\"\nimport { useDispatch } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\"\nimport Notification from \"../../components/notification/Notification\"\nimport { changeNotification } from \"../../reducers/notificationReducer\"\nimport { changeSeverity } from \"../../reducers/severityReducer\"\nimport signUpService from \"../../services/signUpService\"\nimport { setUser } from \"../../reducers/userReducer\"\nimport { getProfileData } from '../../reducers/profileReducer'\nimport { getUserLists } from \"../../reducers/userListsReducer\"\nimport { getUserNotifications } from \"../../reducers/userNotificationsReducer\"\n\n\nconst Login = ({ socket }) => {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const submitUser = async (event) => {\n        event.preventDefault()\n\n        const signedUpUser = {\n            username: event.target.username.value,\n            password: event.target.password.value,\n        }\n\n        signUpService.logInUser(signedUpUser)\n            .then(result => {\n                if (result.userid) {\n                    const sessionUser = { name: result.username, id: result.userid }\n                    dispatch(setUser(sessionUser))\n\n                    dispatch(getUserLists())\n                    dispatch(getUserNotifications())\n                    dispatch(getProfileData())\n                    dispatch(changeNotification(\"\"))\n                    socket.emit(\"newUser\", { name: result.username, id: result.userid, socketID: socket.id })\n                    socket.emit(\"join_notification\", { id: result.userid })\n\n                } else {\n                    dispatch(changeSeverity('error'))\n                    dispatch(changeNotification(result))\n\n                }\n            })\n    }\n\n    const navigateToReset = () => {\n        navigate('/login/resetpassword')\n    }\n\n    return (\n        <Container\n            sx={{\n                pt: 5,\n                pb: 5,\n                backgroundImage: `url(\"https://assets.materialup.com/uploads/cd7deaa7-e263-4c1b-98c9-132d248fc0d4/preview.png\")`,\n                backgroundSize: 'cover',\n                width: 'auto',\n                height: 'auto',\n                minHeight: '80vh',\n            }}\n        >\n            <Paper elevation={10} align='center' sx={{ padding: 3, width: '50%', margin: 'auto' }} >\n                <Typography variant=\"h2\" align='center'> Login </Typography>\n                <form onSubmit={submitUser} align='center'>\n                    <TextField fullWidth margin='normal' name='username' label='Username' placeholder=\"Username\" autoComplete=\"nickname\" required> </TextField>\n                    <TextField fullWidth margin='normal' type=\"password\" name='password' label='Password' placeholder=\"Password\" autoComplete=\"new-password\" required> </TextField>\n                    <Button type='submit' variant=\"contained\" size=\"large\" sx={{ mt: 2}}> Submit </Button>\n                </form>\n                <Button onClick={navigateToReset} sx={{ mt: 1 }}> Forgot Password?</Button>\n                <Notification />\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}